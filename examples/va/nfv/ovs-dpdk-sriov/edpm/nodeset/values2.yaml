---
# yamllint disable rule:line-length

# local-config: referenced, but not emitted by kustomize
apiVersion: v1
kind: ConfigMap
metadata:
  name: edpm-nodeset-values
  annotations:
    config.kubernetes.io/local-config: "true"
data:
  root_password: cmVkaGF0Cg==
  preProvisioned: false
  baremetalSetTemplate:
    #osContainerImageUrl: taken_from_openstackversion registry-proxy.engineering.redhat.com/rh-osbs/rhoso18-edpm-hardened-uefi:18.0.0-17
    ctlplaneInterface: ens4f0
    cloudUserName: cloud-admin
    provisioningInterface: enp1s0
    bmhLabelSelector:
      app: openstack-2
    passwordSecret:
      name: baremetalset-password-secret
      namespace: openstack
  ssh_keys:
    # Authorized keys that will have access to the dataplane computes via SSH
    authorized: CHANGEME
    # The private key that will have access to the dataplane computes via SSH
    private: CHANGEME
    # The public key that will have access to the dataplane computes via SSH
    public: CHANGEME
  nodeset:
    ansible:
      ansibleUser: cloud-admin
      ansiblePort: 22
      ansibleVars:
        # CHANGEME -- see https://access.redhat.com/solutions/253273
        # edpm_bootstrap_command: |
        #       subscription-manager register --username <subscription_manager_username> \
        #         --password <subscription_manager_password>
        #       podman login -u <registry_username> -p <registry_password> registry.redhat.io
        service_net_map:
          nova_api_network: internalapi
          nova_libvirt_network: internalapi
        timesync_ntp_servers:
          - hostname: clock.redhat.com
        # CPU pinning settings
        # edpm nfv ovs dpdk config
        # CHANGEME
        # yamllint disable-line rule:line-length
        edpm_kernel_args: "default_hugepagesz=1GB hugepagesz=1G hugepages=64 iommu=pt intel_iommu=on tsx=off isolcpus=2-19,22-39"
        edpm_tuned_max_power_cstate: c6
        edpm_network_config_nmstate: true
        edpm_network_config_hide_sensitive_logs: false
        edpm_tuned_profile: "cpu-partitioning-powersave"
        edpm_tuned_isolated_cores: "2-19,22-39"
        edpm_nova_libvirt_qemu_group: "hugetlbfs"
        edpm_ovs_dpdk_pmd_core_list: "2,3,22,23"
        edpm_ovs_dpdk_socket_memory: "4096"
        edpm_ovs_dpdk_memory_channels: "4"
        edpm_ovs_dpdk_vhost_postcopy_support: "true"
        edpm_ovn_bridge_mappings: ['dpdkmgmt:br-link0','dpdkdata0:br-dpdk0','dpdkdata1:br-dpdk1']
        # edpm nfv sriov config
        edpm_neutron_sriov_agent_SRIOV_NIC_physical_device_mappings: 'sriov1:ens7f2,sriov2:ens7f3,sriov-mlx-1:ens6f0np0,sriov-mlx-2:ens6f0np1'
        # edpm_network_config
        # These vars are edpm_network_config role vars
        edpm_network_config_os_net_config_mappings:
          # Need to provide nic mapping based on system uuid or system product name
          # here used systetm uuid
          compute-r740:
            dmiString: system-product-name
            id: PowerEdge R740
            nic1: eno1
            nic2: eno2
            nic3: ens4f0
            nic4: ens4f1
            nic5: ens4f2
            nic6: ens4f3
            nic7: ens7f0
            nic8: ens7f1
            nic9: ens7f2
            nic10: ens7f3
            nic11: ens6f0np0
            nic12: ens6f1np1
            nic13: ens1f0np0
            nic14: ens1f1np1
        edpm_network_config_template: |
          ---
          {% set mtu_list = [ctlplane_mtu] %}
          {% for network in nodeset_networks %}
          {{ mtu_list.append(lookup('vars', networks_lower[network] ~ '_mtu')) }}
          {%- endfor %}
          {% set min_viable_mtu = mtu_list | max %}
          network_config:
          - type: interface
            name: nic1
            use_dhcp: false
          - type: interface
            name: nic2
            use_dhcp: false
          - type: interface
            name: nic4
            use_dhcp: false
          - type: ovs_bridge
            name: {{ neutron_physical_bridge_name }}
            mtu: {{ min_viable_mtu }}
            use_dhcp: false
            dns_servers: {{ ctlplane_dns_nameservers }}
            domain: {{ dns_search_domains }}
            addresses:
            - ip_netmask: {{ ctlplane_ip }}/{{ ctlplane_cidr }}
            routes: {{ ctlplane_host_routes }}
            members:
            - type: interface
              name: nic3
              mtu: {{ min_viable_mtu }}
              # force the MAC address of the bridge to this interface
              primary: true
          {% for network in nodeset_networks if network not in ['external', 'tenant'] %}
            - type: vlan
              mtu: {{ lookup('vars', networks_lower[network] ~ '_mtu') }}
              vlan_id: {{ lookup('vars', networks_lower[network] ~ '_vlan_id') }}
              addresses:
                - ip_netmask: {{ lookup('vars', networks_lower[network] ~ '_ip') }}/{{ lookup('vars', networks_lower[network] ~ '_cidr') }}
              routes: {{ lookup('vars', networks_lower[network] ~ '_host_routes') }}
          {% endfor %}
          - type: ovs_user_bridge
            name: br-link0
            use_dhcp: false
            ovs_extra: "set port br-link0 tag={{ lookup('vars', networks_lower['tenant'] ~ '_vlan_id') }}"
            addresses:
              - ip_netmask: {{ lookup('vars', networks_lower['tenant'] ~ '_ip') }}/{{ lookup('vars', networks_lower['tenant'] ~ '_cidr') }}
            mtu: {{ lookup('vars', networks_lower['tenant'] ~ '_mtu') }}
            rx_queue: 1
            members:
            - type: ovs_dpdk_bond
              name: dpdkbond0
              mtu: 9000
              rx_queue: 1
              ovs_extra: "set port dpdkbond0 bond_mode=balance-slb"
              members:
              - type: ovs_dpdk_port
                name: dpdk0
                members:
                - type: interface
                  name: nic7
              - type: ovs_dpdk_port
                name: dpdk1
                members:
                - type: interface
                  name: nic8
          - type: ovs_user_bridge
            name: br-dpdk0
            use_dhcp: false
            mtu: 9000
            rx_queue: 1
            members:
            - type: ovs_dpdk_port
              name: dpdk2
              members:
              - type: interface
                name: nic5
          - type: ovs_user_bridge
            name: br-dpdk1
            use_dhcp: false
            mtu: 9000
            rx_queue: 1
            members:
            - type: ovs_dpdk_port
              name: dpdk3
              members:
              - type: interface
                name: nic6
          - type: sriov_pf
            name: nic9
            numvfs: 5
            mtu: 9000
            use_dhcp: false
            promisc: true
          - type: sriov_pf
            name: nic10
            numvfs: 5
            mtu: 9000
            use_dhcp: false
            promisc: true
          - type: sriov_pf
            name: nic11
            numvfs: 5
            mtu: 9000
            use_dhcp: false
            promisc: true
          - type: sriov_pf
            name: nic12
            numvfs: 5
            mtu: 9000
            use_dhcp: false
            promisc: true
          - type: interface
            name: nic13
            use_dhcp: false
          - type: interface
            name: nic14
            use_dhcp: false

        # These vars are for the network config templates themselves and are
        # considered EDPM network defaults.
        neutron_physical_bridge_name: br-ex
        neutron_public_interface_name: nic1
        # edpm_nodes_validation
        edpm_nodes_validation_validate_controllers_icmp: false
        edpm_neutron_ovn_agent_image: registry-proxy.engineering.redhat.com/rh-osbs/rhoso18-openstack-neutron-ovn-agent:18.0_20240510.1
        edpm_nodes_validation_validate_gateway_icmp: false
        dns_search_domains: []
        gather_facts: false
        enable_debug: false
        # edpm firewall, change the allowed CIDR if needed
        edpm_sshd_configure_firewall: true
        edpm_sshd_allowed_ranges:
          - 192.168.122.0/24
        # SELinux module
        edpm_selinux_mode: enforcing
        edpm_bootstrap_command: |
          cat > /etc/yum.repos.d/rhoso18-rhel9.repo << EOF
          [rhosp-rhel-9.4-baseos]
          name=Red Hat Enterprise Linux 9.4 - x86_64 - baseos
          baseurl=http://download.eng.tlv.redhat.com/released/rhel-9/RHEL-9/9.4.0-Beta-1/BaseOS/x86_64/os/
          enabled=1
          gpgcheck=0

          [rhosp-rhel-9.4-appstream]
          name=Red Hat Enterprise Linux 9.4 - x86_64 - appstream
          baseurl=http://download.eng.tlv.redhat.com/released/rhel-9/RHEL-9/9.4.0-Beta-1/AppStream/x86_64/os/
          enabled=1
          gpgcheck=0

          [rhosp-rhel-9.4-ha]
          name=Red Hat Enterprise Linux 9.4 - x86_64 - HA
          baseurl=http://download.eng.tlv.redhat.com/released/rhel-9/RHEL-9/9.4.0-Beta-1/HighAvailability/x86_64/os/
          enabled=1
          gpgcheck=0

          [rhosp-rhel-9.4-fdp]
          name=Red Hat Enterprise Linux Fast Datapath 9.4 - x86_64 fdp
          baseurl=http://rhsm-pulp.corp.redhat.com/content/dist/layered/rhel9/x86_64/fast-datapath/os/
          enabled=1
          gpgcheck=0

          [openstack-18.0-rhel9-dev-preview-3]
          name=Red Hat Enterprise Linux Fast Datapath 9.4 - x86_64 fdp
          baseurl=https://rhos-qe-mirror.lab.eng.tlv2.redhat.com/rcm-guest/puddles/OpenStack/18.0-RHEL-9/dev-preview-3/compose/OpenStack/x86_64/os/
          enabled=1
          gpgcheck=0
          sslverify=0

          [rhelosp-ceph-7-tools]
          name=Ceph 7 Tools
          baseurl=http://rhos-qe-mirror.lab.eng.tlv2.redhat.com/pulp/content/dist/layered/rhel9/x86_64/rhceph-tools/7/os/
          enabled=1
          gpgcheck=0
    networks:
      - defaultRoute: true
        name: ctlplane
        subnetName: subnet1
      - name: internalapi
        subnetName: subnet1
      - name: storage
        subnetName: subnet1
      - name: tenant
        subnetName: subnet1
    nodes:
      edpm-compute-1:
        hostName: edpm-compute-1
    services:
      - bootstrap
      - download-cache
      - reboot-os
      - configure-ovs-dpdk
      - configure-network
      - validate-network
      - install-os
      - configure-os
      - ssh-known-hosts
      - run-os
      - install-certs
      - ovn
      - neutron-ovn
      - neutron-metadata
      - neutron-sriov
      - libvirt
      - nova-custom-ovsdpdksriov
      - telemetry
  nova:
    compute:
      conf: |
        [DEFAULT]
        reserved_host_memory_mb = 4096
        [compute]
        cpu_shared_set = 0,1,20,21
        cpu_dedicated_set = 4-19,24-39
        [neutron]
        physnets = dpdkdata1
        [neutron_physnet_dpdkdata1]
        numa_nodes = 1
    migration:
      ssh_keys:
        private: CHANGEME
        public: CHANGEME
    pci:
      # yamllint disable-line rule:line-length
      conf: |
        [pci]
        device_spec = {"address": "0000:86:00.2", "physical_network":"sriov1", "trusted":"true"}
        device_spec = {"address": "0000:86:00.3", "physical_network":"sriov2", "trusted":"true"}
        device_spec = {"address": "0000:18:00.0", "physical_network":"sriov-mlx-1", "trusted":"true"}
        device_spec = {"address": "0000:18:00.1", "physical_network":"sriov-mlx-2", "trusted":"true"}
